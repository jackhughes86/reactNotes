{"version":3,"sources":["AddCard.js","ConfirmModal.js","NoteCard.js","notesReducer.js","localStorageReducer.js","NotesContainer.js","App.js","serviceWorker.js","index.js"],"names":["AddCard","_ref","onClick","react_default","a","createElement","Button","style","backgroundColor","borderColor","width","height","alignSelf","marginTop","marginBottom","ConfirmModal","show","title","message","onCancel","onConfirm","type","Modal","onHide","Header","closeButton","Title","Body","Footer","variant","NoteCard","content","update","remove","_useState","useState","_useState2","Object","slicedToArray","editing","setEditing","_useState3","_useState4","setTitle","_useState5","body","_useState6","setBody","_useState7","_useState8","dialogVisible","setDialogVisible","onSubmit","event","preventDefault","objectSpread","Fragment","src_ConfirmModal","Form","noValidate","Card","margin","Control","as","onChange","e","target","value","defaultValue","Text","display","justifyContent","key","overflow","whiteSpace","replaceNote","notes","id","index","findIndex","note","slice","concat","removeNote","reducer","state","action","hash","lastId","Error","LOCAL_STORAGE_KEY","initState","console","log","loadedState","localStorage","getItem","JSON","parse","localStorageReducer","_notesReducer","useReducer","_notesReducer2","dispatch","useEffect","setItem","stringify","saveState","NotesContainer","_localStorageReducer","_localStorageReducer2","Container","src_AddCard","map","item","listStyleType","marginLeft","marginRight","color","Accordion","defaultActiveKey","Toggle","eventKey","Collapse","src_NoteCard","App","className","src_NotesContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.40a9aa79.chunk.js","sourcesContent":["/**\n * @flow\n */\nimport type { Node } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport React from 'react';\n\ntype Props = {|\n  onClick: () => void\n|};\n// ads new note calls add card\nfunction AddCard({ onClick }: Props): Node {\n  return (\n    <Button\n      style={{\n        backgroundColor: 'black',\n        borderColor: 'black',\n        width: '30%',\n        height: '30%',\n        alignSelf: 'center',\n        marginTop: '5%',\n        marginBottom: '15%'\n      }}\n      onClick={onClick}\n    >\n      New\n    </Button>\n  );\n}\n\nexport default AddCard;\n","/**\n * @flow\n */\nimport type {Node} from 'react';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport React from 'react';\n\ntype Props = {|\n    show: boolean,\n    title: string,\n    message: string,\n    onCancel: () => void,\n    onConfirm: () => void,\n    type: 'confirm' | 'remove',\n|};\n\nfunction ConfirmModal({show, title, message, onCancel, onConfirm, type}: Props): Node {\n    return (\n        <Modal show={show} onHide={onCancel}>\n          <Modal.Header closeButton>\n            <Modal.Title>{title}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{message}</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={onCancel}>\n              Cancel\n            </Button>\n            <Button variant={type === 'remove' ? 'danger' : 'primary'} onClick={onConfirm}>\n              {type === 'remove' ? 'Remove' : 'Confirm'}\n            </Button>\n          </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default ConfirmModal;","/**\n *@flow\n */\nimport type { Node } from 'react';\nimport type { Note } from './notesReducer';\n\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport ConfirmModal from './ConfirmModal';\n\ntype Props = {|\n  content: Note,\n  update: Note => void,\n  remove: () => void\n|};\n\nfunction NoteCard({ content, update, remove }: Props): Node {\n  const [editing, setEditing] = useState(false);\n  const [title, setTitle] = useState(content.title);\n  const [body, setBody] = useState(content.body);\n  const [dialogVisible, setDialogVisible] = useState(false);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    update({\n      ...content,\n      title,\n      body\n    });\n    setEditing(false);\n  };\n\n  const createForm = () => (\n    //form and actions\n    <>\n      <ConfirmModal\n        show={dialogVisible}\n        title=\"Confirm remove\"\n        message=\"Are you sure you want to remove the note?\"\n        onCancel={() => setDialogVisible(false)}\n        onConfirm={remove}\n        type=\"remove\"\n      />\n      <Form noValidate onSubmit={onSubmit}>\n        <Card\n          style={{\n            width: '100%',\n            height: '20rem',\n            margin: '4px',\n            marginBottom: '8px'\n          }}\n        >\n          <Card.Body>\n            <Card.Title>\n              <Form.Control\n                as=\"input\"\n                onChange={e => setTitle(e.target.value)}\n                defaultValue={content.title}\n              />\n            </Card.Title>\n            <Card.Text>\n              <Form.Control\n                as=\"textarea\"\n                onChange={e => setBody(e.target.value)}\n                defaultValue={content.body}\n                style={{ height: '11rem', marginBottom: '1rem' }}\n              />\n            </Card.Text>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <Button\n                key=\"remove\"\n                variant=\"outline-danger\"\n                onClick={() => setDialogVisible(true)}\n              >\n                Delete\n              </Button>\n              <Button key=\"save\" type=\"submit\">\n                Save\n              </Button>\n            </div>\n          </Card.Body>\n        </Card>\n      </Form>\n    </>\n  );\n\n  const createView = () => (\n    <>\n      <ConfirmModal\n        show={dialogVisible}\n        title=\"Confirm remove\"\n        message=\"Are you sure you want to remove the note?\"\n        onCancel={() => setDialogVisible(false)}\n        onConfirm={remove}\n        type=\"remove\"\n      />\n      <Card\n        style={{\n          width: '100%'\n        }}\n      >\n        <Card.Body>\n          <Card.Title>{content.title}</Card.Title>\n          <div\n            style={{\n              overflow: 'auto',\n              height: '12rem',\n              marginBottom: '1rem',\n              whiteSpace: 'pre-line'\n            }}\n          >\n            <Card.Text>{content.body}</Card.Text>\n          </div>\n          <Button\n            style={{ backgroundColor: 'black', borderColor: 'black' }}\n            onClick={() => {\n              setEditing(true);\n            }}\n          >\n            Edit\n          </Button>\n          <Button\n            key=\"remove\"\n            variant=\"outline-danger\"\n            onClick={() => setDialogVisible(true)}\n          >\n            Delete\n          </Button>\n        </Card.Body>\n      </Card>\n    </>\n  );\n\n  return editing ? createForm() : createView();\n}\n\nexport default NoteCard;\n","/**\n@flow\n */\nimport { useReducer } from 'react';\n//note model\nexport type Note = {|\n  id?: number,\n  title: ?string,\n  body: ?string\n|};\n//state\nexport type State = {|\n  hash: number,\n  notes: Array<Note>,\n  lastId: number\n|};\n//add reducer\nfunction addNote(notes: Array<Note>, id: number, content: Note): Array<Note> {\n  return notes.concat({\n    ...content,\n    id\n  });\n}\n//edit reducer\nfunction replaceNote(\n  notes: Array<Note>,\n  id: number,\n  content: Note\n): Array<Note> {\n  const index = notes.findIndex(note => note.id === id);\n  if (index === -1) return notes;\n  return notes\n    .slice(0, index)\n    .concat({\n      ...content,\n      id\n    })\n    .concat(notes.slice(index + 1));\n}\n//delete reducer\nfunction removeNote(notes: Array<Note>, id: number): Array<Note> {\n  const index = notes.findIndex(note => note.id === id);\n  if (index === -1) return notes;\n  return notes.slice(0, index).concat(notes.slice(index + 1));\n}\n\nexport function reducer(state: State, action: any): State {\n  switch (action.type) {\n    case 'addNote':\n      return {\n        ...state,\n        hash: state.hash + 1,\n        notes: addNote(state.notes, state.lastId + 1, action.content),\n        lastId: state.lastId + 1\n      };\n    case 'modifyNote':\n      if (action.id == null) return state;\n      return {\n        ...state,\n        hash: state.hash + 1,\n        notes: replaceNote(state.notes, action.id, action.content)\n      };\n    case 'removeNote':\n      if (action.id == null) return state;\n      return {\n        ...state,\n        hash: state.hash + 1,\n        notes: removeNote(state.notes, action.id)\n      };\n    default:\n      throw new Error('unknown action: ' + action.type);\n  }\n}\n\nexport default function notesReducer(initState: () => State) {\n  return useReducer<State, any, null>(reducer, null, initState);\n}\n","/**\n * Decorator for notesReducer that loads/saves state from local storage\n * \n \n */\nimport type { State } from './notesReducer';\n\nimport { useEffect } from 'react';\nimport notesReducer from './notesReducer';\n\nconst LOCAL_STORAGE_KEY = 'appState';\n\nfunction initState() {\n  console.log('loading');\n  let loadedState = localStorage.getItem(LOCAL_STORAGE_KEY) || '';\n  try {\n    loadedState = JSON.parse(loadedState);\n  } catch (e) {\n    loadedState = null;\n  }\n  return loadedState || { hash: 0, lastId: 0, notes: [] };\n}\n\nfunction saveState(state: State) {\n  console.log('saving: ', state.hash);\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(state));\n}\n\nfunction localStorageReducer() {\n  const [state, dispatch] = notesReducer(initState);\n\n  useEffect(() => {\n    saveState(state);\n  }, [state]);\n\n  return [state, dispatch];\n}\n\nexport default localStorageReducer;\n","import type { Node } from 'react';\n\nimport { Container, Card, Button } from 'react-bootstrap';\nimport React from 'react';\nimport AddCard from './AddCard';\nimport NoteCard from './NoteCard';\nimport localStorageReducer from './localStorageReducer';\nimport Accordion from 'react-bootstrap/Accordion';\nfunction NotesContainer(): Node {\n  const [state, dispatch] = localStorageReducer();\n  var count = 0;\n  return (\n    //main listing\n    <>\n      <Container>\n        <AddCard\n          onClick={() =>\n            dispatch({\n              type: 'addNote',\n              content: {\n                title: 'New',\n                body: ''\n              }\n            })\n          }\n        />\n\n        {state.notes.map(item => (\n          <ul\n            style={{\n              listStyleType: 'none',\n              width: '45%',\n              marginLeft: '25%',\n              marginRight: '35%'\n            }}\n          >\n            <li style={{ color: 'black' }} key={item.id}>\n              <Accordion defaultActiveKey=\"0\">\n                <Card>\n                  <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                    {item.title}\n                  </Accordion.Toggle>\n                  <Accordion.Collapse eventKey=\"1\">\n                    <NoteCard\n                      content={item}\n                      update={note =>\n                        dispatch({\n                          type: 'modifyNote',\n                          id: item.id,\n                          content: note\n                        })\n                      }\n                      remove={() =>\n                        dispatch({\n                          type: 'removeNote',\n                          id: item.id\n                        })\n                      }\n                    />\n                  </Accordion.Collapse>\n                </Card>\n              </Accordion>\n            </li>\n          </ul>\n        ))}\n      </Container>\n    </>\n  );\n}\n\nexport default NotesContainer;\n","/**\n * @flow\n */\nimport type { Node } from 'react';\n\nimport React from 'react';\nimport './App.css';\nimport NotesContainer from './NotesContainer';\n\nfunction App(): Node {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Welcome To Notebook</h1>\n        <h5>Click New to begin taking notes!</h5>\n        <NotesContainer />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}